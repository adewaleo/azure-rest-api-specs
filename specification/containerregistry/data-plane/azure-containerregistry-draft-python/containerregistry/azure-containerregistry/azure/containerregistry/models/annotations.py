# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Annotations(Model):
    """Additional information provided through arbitrary metadata.

    :param additional_properties: Unmatched properties from the message are
     deserialized this collection
    :type additional_properties: dict[str, object]
    :param created: Date and time on which the image was built (string,
     date-time as defined by https://tools.ietf.org/html/rfc3339#section-5.6)
    :type created: datetime
    :param authors: Contact details of the people or organization responsible
     for the image.
    :type authors: str
    :param url: URL to find more information on the image.
    :type url: str
    :param documentation: URL to get documentation on the image.
    :type documentation: str
    :param source: URL to get source code for building the image.
    :type source: str
    :param version: Version of the packaged software. The version MAY match a
     label or tag in the source code repository, may also be Semantic
     versioning-compatible
    :type version: str
    :param revision: Source control revision identifier for the packaged
     software.
    :type revision: str
    :param vendor: Name of the distributing entity, organization or
     individual.
    :type vendor: str
    :param licenses: License(s) under which contained software is distributed
     as an SPDX License Expression.
    :type licenses: str
    :param name: Name of the reference for a target.
    :type name: str
    :param title: Human-readable title of the image
    :type title: str
    :param description: Human-readable description of the software packaged in
     the image
    :type description: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'created': {'key': 'org\\.opencontainers\\.image\\.created', 'type': 'iso-8601'},
        'authors': {'key': 'org\\.opencontainers\\.image\\.authors', 'type': 'str'},
        'url': {'key': 'org\\.opencontainers\\.image\\.url', 'type': 'str'},
        'documentation': {'key': 'org\\.opencontainers\\.image\\.documentation', 'type': 'str'},
        'source': {'key': 'org\\.opencontainers\\.image\\.source', 'type': 'str'},
        'version': {'key': 'org\\.opencontainers\\.image\\.version', 'type': 'str'},
        'revision': {'key': 'org\\.opencontainers\\.image\\.revision', 'type': 'str'},
        'vendor': {'key': 'org\\.opencontainers\\.image\\.vendor', 'type': 'str'},
        'licenses': {'key': 'org\\.opencontainers\\.image\\.licenses', 'type': 'str'},
        'name': {'key': 'org\\.opencontainers\\.image\\.ref\\.name', 'type': 'str'},
        'title': {'key': 'org\\.opencontainers\\.image\\.title', 'type': 'str'},
        'description': {'key': 'org\\.opencontainers\\.image\\.description', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(Annotations, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.created = kwargs.get('created', None)
        self.authors = kwargs.get('authors', None)
        self.url = kwargs.get('url', None)
        self.documentation = kwargs.get('documentation', None)
        self.source = kwargs.get('source', None)
        self.version = kwargs.get('version', None)
        self.revision = kwargs.get('revision', None)
        self.vendor = kwargs.get('vendor', None)
        self.licenses = kwargs.get('licenses', None)
        self.name = kwargs.get('name', None)
        self.title = kwargs.get('title', None)
        self.description = kwargs.get('description', None)
